#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ webhook –∏ –æ—á–∏—Å—Ç–∫–∏ pending updates
"""
import asyncio
import httpx
import os
from dotenv import load_dotenv

load_dotenv()
BOT_TOKEN = os.getenv('BOT_TOKEN', '8248837045:AAHS7gxD-8WJxI-TJzHwDh8BwFgXE1pXamE')

async def reset_bot_state():
    print("üîÑ –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞...")
    async with httpx.AsyncClient() as client:
        # 1. –£–¥–∞–ª—è–µ–º webhook
        response = await client.post(f"https://api.telegram.org/bot{BOT_TOKEN}/deleteWebhook")
        print(f"‚úÖ Webhook —É–¥–∞–ª–µ–Ω: {response.json()}")
        
        # 2. –û—á–∏—â–∞–µ–º pending updates
        offset = 0
        updates_cleared = 0
        for i in range(3):
            response = await client.post(f"https://api.telegram.org/bot{BOT_TOKEN}/getUpdates", 
                                       json={"offset": offset, "limit": 100, "timeout": 1})
            data = response.json()
            if not data['ok'] or not data['result']:
                break
            
            updates = data['result']
            if not updates:
                break
            
            for update in updates:
                offset = max(offset, update['update_id'] + 1)
            updates_cleared += len(updates)
            print(f"–û—á–∏—â–µ–Ω–æ {len(updates)} –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
        
        print(f"‚úÖ –í—Å–µ–≥–æ –æ—á–∏—â–µ–Ω–æ {updates_cleared} pending –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
        print("‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞ —Å–±—Ä–æ—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(reset_bot_state())
